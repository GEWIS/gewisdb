services:
    postgresql:
        build: docker/postgresql
        env_file:
            - .env
        volumes:
            - postgresql:/var/lib/postgresql/data:rw
        networks:
            - network
        ports:
            - "5432:5432"
        restart: unless-stopped
    pgadmin:
        build:
            dockerfile: docker/pgadmin/Dockerfile
            context: .
        env_file:
            - .env
        depends_on:
            - postgresql
        networks:
            - network
        ports:
            - "8080:80"
        restart: unless-stopped
    postfix:
        image: mailhog/mailhog
        ports:
            - "8025:8025"
    mailman-core:
        image: maxking/mailman-core:0.5
        hostname: mailman-core
        volumes:
            - mailman-core:/opt/mailman/
        depends_on:
            - postgresql
        environment:
            - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql/${POSTGRES_MAILMAN_DATABASE}
            - DATABASE_TYPE=postgres
            - DATABASE_CLASS=mailman.database.postgresql.PostgreSQLDatabase
            - HYPERKITTY_API_KEY=somerandomapikeythatiobviouslydidnotcreatemyself
            - MAILMAN_DOMAIN=${SERVER_HOSTNAME}
            - SMTP_HOST=postfix
            - SMTP_PORT=1025
            - SMTP_SECURE_MODE=smtp
        ports:
            - "8020:8001"
        networks:
            - network
    mailman-web:
        image: maxking/mailman-web:0.5
        hostname: mailman-web
        depends_on:
            - postgresql
        volumes:
            - mailman-web:/opt/mailman-web-data/
            - mailman-static:/opt/mailman-web-data/static/
        environment:
            - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql/${POSTGRES_MAILMAN_DATABASE}
            - DATABASE_TYPE=postgres
            - DJANGO_ALLOWED_HOSTS=127.0.0.1,localhost,mailmanw
            - HYPERKITTY_API_KEY=somerandomapikeythatiobviouslydidnotcreatemyself
            - SECRET_KEY=anotherandomkeythatiobviouslydidnotcreatemyself
            - SERVE_FROM_DOMAIN=localhost
            - UWSGI_STATIC_MAP=/static=/opt/mailman-web-data/static
            - MAILMAN_ADMIN_USER=${DEMO_CREDENTIALS_USERNAME}
            - MAILMAN_ADMIN_EMAIL=${DEMO_CREDENTIALS_USERNAME}@${SERVER_HOSTNAME}
            - DJANGO_SUPERUSER_USERNAME=${DEMO_CREDENTIALS_USERNAME}
            - DJANGO_SUPERUSER_EMAIL=${DEMO_CREDENTIALS_USERNAME}@${SERVER_HOSTNAME}
            - DJANGO_SUPERUSER_PASSWORD=${DEMO_CREDENTIALS_PASSWORD}
            - SMTP_HOST=postfix
            - SMTP_PORT=1025
        ports:
            - "8021:8000"
        networks:
            - network
    nginx:
        build: docker/nginx
        depends_on:
            - mailman-web
        volumes:
            - mailman-static:/var/html/mailman/:ro
        ports:
            - "80:9725"
    stripe:
        image: stripe/stripe-cli:latest
        command: listen --forward-to nginx:9725/member/subscribe/checkout/webhook
        environment:
            - STRIPE_API_KEY=${STRIPE_SECRET_KEY}
            - STRIPE_DEVICE_NAME="GEWISDB on ${HOST:-}${NAME:-}"
            - STRIPE_CLI_TELEMETRY_OPTOUT=1
        depends_on:
            - nginx
        networks:
            - network
    web:
        image: abc.docker-registry.gewis.nl/db/gewisdb/web:development
        build:
            dockerfile: docker/web/development/Dockerfile
            context: .
        depends_on:
            - mailman-core
            - postgresql

volumes:
    postgresql:
    mailman-web:
    mailman-core:
    mailman-static:
